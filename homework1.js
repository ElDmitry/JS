"use strict"

// Відбудеться операція конкастинації і до рядка "number" допишеться 33. Результат number33
'number' + 3 + 3

// null перетвориться на число "0" і відбудеться додавання. Результат 4
null + 3

//Оператор and буде перевіряти всі значеня до першого false, якщо дійде до кінця і не знайде false, то виведе останнє значення qwerty
5 && "qwerty"

//Унарний "+" перетворює значення на number і відбувається додавання 40 + 2, далі відбувається конкастинація. Результат 42hillel
+'40' + +'2' + "hillel";

//Проста арифметична дія результат якої буде false, адже 5 не дорівнює 6
'10' - 5 === 6;

// Значення true + false буде перевкедено до чисел, і відбудеться додавання 1+0=1
true + false

//У данному випадку результатом буде NaN. Тому, що текст відняти число неможливо.
'4px' - 3

//Відбудеться звичайна операція віднімання. Результат 1
'4' - 3

//В данному випадку спрацює Правоасоціативна операція і вираз почне вирішення із 3 ** 0 де буде результат 1, а потім буде конкастинація і результат 61.
'6' + 3 ** 0;

//Відбудеться звичайне математичне ділення і результат 2
12 / '6'

//В данному випадку також спрацює Правоасоціативна операція і вираз почне вирішення із 5 === 6 де буде результат false, а потім буде конкастинація і результат 10false
'10' + (5 === 6);

//В данному випадку результат буде false, тому, що null може дорівнювати лише null або undefined, всі інші випадки false
null == ''

//Тут спрацює приорітет на групування і перша дія відбудеться в дужках рез. 3, далі сведення в ступінь 3. Рез. 27
3 ** (9 / 3);

//В данному прикладі буде рез. true, до обох значень застосується подвійне інвертування і в цьому випадку це інвертування буде застосовано до строки.
!!'false' == !!'true'

//Результат виразу 1. У цьому випадку перше відпрацює '0' && 1 за приорітетом операції. І рез. 1, так як обидва значення true. Далі 0 || 1, рез. буде 1, так як 0 це false, далі 1 це true.
0 || '0' && 1

//Результат false. Першим буде вираз (+null == false), де 0==0, рез. буде true, тобто 1. Далі true < 1, тобто 1 < 1, а це false
(+null == false) < 1;

//У цьому випадку перше буде false && true, результат якої false, так як один із значень false. Далі false || true, результатом буде true.
false && true || true

//У цьому випадку перше буде (false || true), результат якої true. Далі false && true, результатом буде false, так як одне з двох значень false.
false && (false || true);

//Першим буде (+null == false) із результатом true. Далі 1 ** 5 по приорітету із результатом 1, і останнє true < 1, резулитат буде  false
(+null == false) < 1 ** 5;
